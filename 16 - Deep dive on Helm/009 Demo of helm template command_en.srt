1
00:00:00,000 --> 00:00:06,000
As of now, we have done a lot of pre-work on preparing our own helm charts, which are specific to

2
00:00:06,000 --> 00:00:08,000
easybank microservice.

3
00:00:08,000 --> 00:00:14,000
Sometimes before you try to install your helm charts, you may want to know how your Kubernetes manifest

4
00:00:14,000 --> 00:00:19,000
files is going to look like that are going to be generated by your helm chart.

5
00:00:19,000 --> 00:00:23,000
So to do the same validation, we have a command inside the helm.

6
00:00:23,000 --> 00:00:25,000
So the command is helm template.

7
00:00:25,000 --> 00:00:30,000
So with the help of these helm template command, we can see all the Kubernetes files that are going

8
00:00:30,000 --> 00:00:32,000
to be generated by your helm.

9
00:00:32,000 --> 00:00:38,000
And the same Kubernetes manifest files are also going to be installed inside your Kubernetes cluster.

10
00:00:38,000 --> 00:00:44,000
So it will be a wise decision to validate the Kubernetes manifest files before we try to install them

11
00:00:44,000 --> 00:00:46,000
into the Kubernetes cluster.

12
00:00:46,000 --> 00:00:52,000
So to execute this helm template command, we need to make sure our terminal is opened inside your helm

13
00:00:52,000 --> 00:00:53,000
chart.

14
00:00:53,000 --> 00:00:57,000
As of now, you can see I am into the folder which is dev-env.

15
00:00:57,000 --> 00:01:03,000
So from this location I can try to run the command which is helm template space dot.

16
00:01:03,000 --> 00:01:08,000
So with this dot I'm telling my helm template is available in this folder only.

17
00:01:08,000 --> 00:01:13,000
Please access the same and show me all the Kubernetes manifest files that you are going to prepare.

18
00:01:13,000 --> 00:01:14,000
So I'm trying to execute this.

19
00:01:14,000 --> 00:01:20,000
You can expect a big output, but instead we are getting an error.

20
00:01:20,000 --> 00:01:22,000
So let me try to see why we are getting this error.

21
00:01:22,000 --> 00:01:29,000
So seems there is a problem inside my common.service template file which I have defined inside

22
00:01:29,000 --> 00:01:29,000
the chart.

23
00:01:29,000 --> 00:01:30,000
Easy bank command.

24
00:01:30,000 --> 00:01:31,000
So let me open the same.

25
00:01:31,000 --> 00:01:38,000
So here I'll go inside this folder and open the templates folder and post that I'm going to open this

26
00:01:38,000 --> 00:01:39,000
service.yaml.

27
00:01:39,000 --> 00:01:46,000
So here, for some reason by mistake I have mentioned the variable name against the port as value some

28
00:01:46,000 --> 00:01:47,000
special character.port.

29
00:01:47,000 --> 00:01:49,000
So this is not the correct value.

30
00:01:49,000 --> 00:01:53,000
Let me try to delete this and mention service.port.

31
00:01:53,000 --> 00:01:54,000
So this is the correct value.

32
00:01:54,000 --> 00:01:56,000
So these are culprit.

33
00:01:56,000 --> 00:02:00,000
I'm not sure how this got introduced somewhere without my intention.

34
00:02:00,000 --> 00:02:03,000
I might have pressed some key inside my keyboard.

35
00:02:03,000 --> 00:02:04,000
Apologies for that.

36
00:02:04,000 --> 00:02:11,000
Now let's go to the terminal since we have made some changes inside the easybank-common chart.

37
00:02:11,000 --> 00:02:17,000
We need to recompile all the charts where they have dependency on the easybank-common.

38
00:02:17,000 --> 00:02:23,000
So for the same, let me go to the easybank services folder location. Inside the easybank services

39
00:02:23,000 --> 00:02:24,000
folder location,

40
00:02:24,000 --> 00:02:30,000
first, I'll go to the accounts helm chart and here I'm going to run the command, which is helm dependencies

41
00:02:30,000 --> 00:02:30,000
build.

42
00:02:30,000 --> 00:02:35,000
So what I will do is, behind the scenes, I will try to run this command for all the remaining microservices.

43
00:02:35,000 --> 00:02:40,000
Now, behind the scenes, I have compiled all the microservice specific helm charts.

44
00:02:40,000 --> 00:02:45,000
As a next step, I will go to the folder location which is related to environments.

45
00:02:45,000 --> 00:02:51,000
So let me go back and go into the environments folder and inside this I'll navigate back to the dev-env

46
00:02:51,000 --> 00:02:58,000
and here I'm going to run the command which is helm dependencies build because I want to

47
00:02:58,000 --> 00:03:00,000
recompile dev environment also.

48
00:03:00,000 --> 00:03:07,000
Very similarly, we can also recompile the other environments that we have like qa env post qa env,

49
00:03:07,000 --> 00:03:12,000
I'm going to recompile again for prod env as well.

50
00:03:12,000 --> 00:03:17,000
So let me go inside my prod env and post that I'm going to run the helm

51
00:03:17,000 --> 00:03:18,000
dependencies build.

52
00:03:18,000 --> 00:03:19,000
Now this time it should work.

53
00:03:19,000 --> 00:03:26,000
So let me try to run the command which is help template. and like you can see this time we are getting

54
00:03:26,000 --> 00:03:33,000
the output of all our Kubernetes manifest files that it is going to generate for our microservices.

55
00:03:33,000 --> 00:03:35,000
For example, for message microservice

56
00:03:35,000 --> 00:03:37,000
this is the deployment instruction.

57
00:03:37,000 --> 00:03:42,000
The metadata name is going to be message hyphen, deployment and replicas is going to be one.

58
00:03:42,000 --> 00:03:47,000
And these are all the environment variables that we are going to inject for message

59
00:03:47,000 --> 00:03:51,000
microservice. Similarly, you can validate all the Kubernetes manifest file.

60
00:03:51,000 --> 00:03:56,000
This is going to be a big output because we have around seven microservices.

61
00:03:56,000 --> 00:03:57,000
For all of them,

62
00:03:57,000 --> 00:04:04,000
the helm provided Kubernetes manifest files, so these are all the actual Kubernetes manifest files

63
00:04:04,000 --> 00:04:11,000
that will get executed into the Kubernetes cluster when you try to install a specific environment helm

64
00:04:11,000 --> 00:04:11,000
chart.

65
00:04:11,000 --> 00:04:15,000
So you can also quickly validate for other environments as well.

66
00:04:15,000 --> 00:04:21,000
Since we right now execute the helm template command for prod environment, we are getting the config

67
00:04:21,000 --> 00:04:24,000
map name as easybank prod hyphen config map.

68
00:04:24,000 --> 00:04:29,000
So if you try to execute helm template for other environments, you should be able to see a different

69
00:04:29,000 --> 00:04:30,000
config map name.

70
00:04:30,000 --> 00:04:35,000
So let me clean the console and go back to the one of the environments.

71
00:04:35,000 --> 00:04:41,000
Maybe I'll go to the dev-env and run the command which is helm template dot and this time also

72
00:04:41,000 --> 00:04:44,000
I'm getting successful output. If needed,

73
00:04:44,000 --> 00:04:47,000
you can also validate the same for environment as well.

74
00:04:47,000 --> 00:04:48,000
I'm sure it is going to work.

75
00:04:48,000 --> 00:04:55,000
So as a next step to deploy all our microservices into the Kubernetes cluster, we can simply install

76
00:04:55,000 --> 00:04:57,000
one of the environment helm chart.

77
00:04:57,000 --> 00:05:00,000
But before that we need to make sure we also set up.

78
00:05:00,000 --> 00:05:06,000
keycloak, Kafka and Grafana related components inside our Kubernetes cluster.

79
00:05:06,000 --> 00:05:11,000
For those, we don't have to prepare any helm charts manually because all these products are heavily

80
00:05:11,000 --> 00:05:13,000
used by the industry.

81
00:05:13,000 --> 00:05:19,000
And with that reason, many open source communities and organizations they built the helm charts specific

82
00:05:19,000 --> 00:05:23,000
to these components like Kafka, Keycloak and Grafana.

83
00:05:23,000 --> 00:05:27,000
So let's try to explore them and try to learn how to set up those components,

84
00:05:27,000 --> 00:05:29,000
with the help of Helm.

85
00:05:29,000 --> 00:05:31,000
I hope you are clear up to this point.

86
00:05:31,000 --> 00:05:33,000
Thank you and I'll catch you in the next lecture bye.

