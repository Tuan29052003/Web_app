1
00:00:00,000 --> 00:00:01,000
Behind the scenes

2
00:00:01,000 --> 00:00:08,000
I have generated that docker images of all the microservices with the changes related to the section17

3
00:00:08,000 --> 00:00:09,000
.

4
00:00:09,000 --> 00:00:15,000
That's why you are able to see the images with the tag name s17 inside my Docker desktop.

5
00:00:15,000 --> 00:00:22,000
Apart from generating the Docker images, I also installed Keycloak, Kafka, Grafana related components,

6
00:00:22,000 --> 00:00:25,000
prometheus inside my Kubernetes cluster.

7
00:00:25,000 --> 00:00:31,000
As a next step, we need to update the helm charts of Easy Bank and post that we can deploy our own

8
00:00:31,000 --> 00:00:35,000
microservices into the Kubernetes cluster based upon the latest helm charts.

9
00:00:35,000 --> 00:00:41,000
So to update the helm charts inside the section17, we have a folder with the name Helm.

10
00:00:41,000 --> 00:00:42,000
Let me open that.

11
00:00:42,000 --> 00:00:45,000
Here we can go to the easy bank services.

12
00:00:45,000 --> 00:00:52,000
First, let me delete the folder related to the Eureka server. And post that I need to open the values.yaml

13
00:00:52,000 --> 00:00:58,000
of all the microservices and update that tag name from s14 to s17.

14
00:00:58,000 --> 00:01:05,000
And apart from updating this image tag name for accounts microservice, I'm going to create two replicas

15
00:01:05,000 --> 00:01:11,000
since I want to show you the demo of load balancing at the server side, I'm going to mention the replica

16
00:01:11,000 --> 00:01:15,000
count as two inside this account service related helm chart.

17
00:01:15,000 --> 00:01:20,000
Let me update the tag details inside other microservices as well.

18
00:01:20,000 --> 00:01:26,000
So here inside cards, I'm trying to update the tag name from s14 to s17.

19
00:01:26,000 --> 00:01:30,000
Now let me update for config server inside my config server

20
00:01:30,000 --> 00:01:31,000
also, I'm updating.

21
00:01:31,000 --> 00:01:34,000
Next I will update for gateway server.

22
00:01:34,000 --> 00:01:38,000
Here I'm trying to update the tag name from s14 to s17.

23
00:01:38,000 --> 00:01:40,000
Next, I'll go to the loans, inside loans

24
00:01:40,000 --> 00:01:45,000
also, I'll open the values.yml and update the tag name to s17.

25
00:01:45,000 --> 00:01:49,000
Let me do the same for last microservice, which is message microservice.

26
00:01:49,000 --> 00:01:53,000
So here I'm going to update the tag name. As a next step,

27
00:01:53,000 --> 00:01:58,000
I'm going to open the environments folder here under the dev env.

28
00:01:58,000 --> 00:02:02,000
I'm going to open the chart.yaml. Inside the chart.yaml,

29
00:02:02,000 --> 00:02:06,000
we have defined all the dependent chart details. Inside this dependencies list,

30
00:02:06,000 --> 00:02:10,000
we need to delete the dependency related to the Eureka server.

31
00:02:10,000 --> 00:02:13,000
So let me do the same for prod env as well .

32
00:02:13,000 --> 00:02:18,000
Here also I'm going to look for Eureka server related helm chart and delete the same.

33
00:02:18,000 --> 00:02:25,000
I'm going to do the same change inside the qa env as well by opening the chart.yaml and post that I

34
00:02:25,000 --> 00:02:27,000
will delete these Eureka server.

35
00:02:27,000 --> 00:02:33,000
So once we have done these changes we need to recompile our environment specific helm chart so that

36
00:02:33,000 --> 00:02:41,000
all the latest values that we have defined will be compiled and copied into the charts folder of our

37
00:02:41,000 --> 00:02:42,000
environment helm charts.

38
00:02:42,000 --> 00:02:49,000
So for the same inside my terminal, I'm going to navigate into the helm folder post that I will go

39
00:02:49,000 --> 00:02:51,000
into environments inside environment,

40
00:02:51,000 --> 00:02:55,000
first I will try to open the dev env.

41
00:02:55,000 --> 00:03:00,000
Here I'm going to run the command which is helm dependencies build. With this

42
00:03:00,000 --> 00:03:06,000
the compilation should happen, but like I said before, sometimes the chart.log will create some issues

43
00:03:06,000 --> 00:03:10,000
because we deleted some dependencies inside the chart.yaml.

44
00:03:10,000 --> 00:03:16,000
So to fix this issue we need to delete the chart.log file inside the folder.

45
00:03:16,000 --> 00:03:18,000
So here we can delete this chart.log.

46
00:03:18,000 --> 00:03:21,000
Let me do the same for other folders also.

47
00:03:21,000 --> 00:03:25,000
Finally I'll delete inside the qa - env as well.

48
00:03:25,000 --> 00:03:28,000
Now let me try to run this helm dependencies build.

49
00:03:28,000 --> 00:03:31,000
So this time the compilation is going to be successful.

50
00:03:31,000 --> 00:03:37,000
Post that I will navigate into the prod env and run the same command which is helm dependencies

51
00:03:37,000 --> 00:03:38,000
build as a next step,

52
00:03:38,000 --> 00:03:40,000
navigate back to the parent folder.

53
00:03:40,000 --> 00:03:44,000
After that I'm going to navigate into the qa -env.

54
00:03:44,000 --> 00:03:50,000
So here I'm going to execute the helm dependencies, build the compilation is going to be successful.

55
00:03:50,000 --> 00:03:54,000
Now let me go back to the environments folder as a next step,

56
00:03:54,000 --> 00:04:01,000
we can try to install all our microservices with the help of helm install command.

57
00:04:01,000 --> 00:04:04,000
The command is going to be helm install,

58
00:04:04,000 --> 00:04:06,000
what is the release name that we want to give.

59
00:04:06,000 --> 00:04:12,000
The release name that I will give is easybank and what is the chart name that we are going to consider.

60
00:04:12,000 --> 00:04:12,000
Here

61
00:04:12,000 --> 00:04:16,000
let me try to use the prod env chart. For the same,

62
00:04:16,000 --> 00:04:20,000
I need to mention the folder where my helm chart is available.

63
00:04:20,000 --> 00:04:25,000
So I'm trying to execute this command and the installation is going to start behind the scenes.

64
00:04:25,000 --> 00:04:30,000
Let's go to the Kubernetes dashboard and confirm the same inside my Kubernetes dashboard

65
00:04:30,000 --> 00:04:32,000
I'll go to the pods for accounts

66
00:04:32,000 --> 00:04:36,000
you should be able to see two parts if I search for accounts,

67
00:04:36,000 --> 00:04:41,000
so there are two parts because we have defined the replica count as two.

68
00:04:41,000 --> 00:04:47,000
So first let me check the logs of config server to make sure that my config server started successfully

69
00:04:47,000 --> 00:04:51,000
post that only my remaining microservices are going to start.

70
00:04:51,000 --> 00:04:57,000
So this is going to take few minutes time because inside my local system we have installed too many

71
00:04:57,000 --> 00:05:00,000
components and due to that my laptop is going

72
00:05:00,000 --> 00:05:01,000
to perform very slowly.

73
00:05:01,000 --> 00:05:07,000
So let me wait for these deployments to complete behind the scenes post that we can continue the discussion.

74
00:05:07,000 --> 00:05:08,000
Behind the scenes,

75
00:05:08,000 --> 00:05:15,000
I waited for more than five minutes, but unfortunately my gateway server loans, cards and accounts

76
00:05:15,000 --> 00:05:22,000
microservice, they are not able to start with an error saying that we didn't provide the URL details

77
00:05:22,000 --> 00:05:23,000
of discovery server.

78
00:05:23,000 --> 00:05:30,000
If you see this error, it is clearly highlighting that we missed mentioning this property using which

79
00:05:30,000 --> 00:05:33,000
we need to provide a valid URL of discovery server.

80
00:05:33,000 --> 00:05:40,000
So without mentioning that discovery server URL, how my gateway server accounts, loans and cards will

81
00:05:40,000 --> 00:05:40,000
know.

82
00:05:40,000 --> 00:05:45,000
That's why to fix this issue we need to define this property. Inside the blog

83
00:05:45,000 --> 00:05:51,000
also, they have clearly highlighted this like whoever is using these dependency, they need to make

84
00:05:51,000 --> 00:05:57,000
sure they are setting this property by providing the URL of the Discovery server deployed on Kubernetes.

85
00:05:57,000 --> 00:06:02,000
But it is my bad that I missed mentioning these changes inside the helm chart.

86
00:06:02,000 --> 00:06:09,000
So let's go to the helm chart and try to update the same so that we can try to redeploy our applications

87
00:06:09,000 --> 00:06:10,000
one more time.

88
00:06:10,000 --> 00:06:15,000
But before that, let me run the command of Helm Uninstall for the Easy Bank release.

89
00:06:15,000 --> 00:06:21,000
So here I'm trying to run the helm uninstall command, so this will uninstall all my microservices.

90
00:06:21,000 --> 00:06:24,000
As a next step, I'll go to the helm chart inside the helm chart,

91
00:06:24,000 --> 00:06:31,000
first, I need to go to the easybank-common Helm chart and here I'm going to open the config map template

92
00:06:31,000 --> 00:06:38,000
because we are going to create a new property using which we are going to provide the discovery server

93
00:06:38,000 --> 00:06:38,000
URL.

94
00:06:38,000 --> 00:06:45,000
So here in the place of Eureka client service URL default zone, I'm going to create a new property

95
00:06:45,000 --> 00:06:51,000
and this property is going to be SPRING.CLOUD.KUBERNETES.DISCOVERY.DISCOVERY-SERVER-URL.

96
00:06:51,000 --> 00:06:52,000
The variable name  

97
00:06:52,000 --> 00:06:57,000
also, I will change from eurekaServerURL to discoveryServerURL.

98
00:06:57,000 --> 00:06:59,000
So let me change this to discovery.

99
00:06:59,000 --> 00:07:01,000
So these are one of the change that we have to do.

100
00:07:01,000 --> 00:07:05,000
The next change that we need to do is, inside the deployment template files

101
00:07:05,000 --> 00:07:09,000
we need to write a if condition based upon the Boolean value.

102
00:07:09,000 --> 00:07:11,000
We need to set this property. For the same,

103
00:07:11,000 --> 00:07:14,000
let me open the deployment.yaml.

104
00:07:14,000 --> 00:07:22,000
Here we can look for Eureka server URL if condition in the place of Eureka enabled, I will mention boolean

105
00:07:22,000 --> 00:07:26,000
value as discovery enabled.

106
00:07:26,000 --> 00:07:28,000
Post that I'm going to change the environment variable name,

107
00:07:28,000 --> 00:07:30,000
similarly under the key as well

108
00:07:30,000 --> 00:07:31,000
I'm going to change.

109
00:07:31,000 --> 00:07:35,000
So with this we should be good from the deployment.yaml file perspective.

110
00:07:36,000 --> 00:07:42,000
As a next step, I need to go to the easybank services and here I'm going to open the accounts microservice

111
00:07:42,000 --> 00:07:44,000
helm chart.

112
00:07:44,000 --> 00:07:51,000
So let me open the values.yaml and here I will change the variable name Eureka enabled with discovery

113
00:07:51,000 --> 00:07:51,000
enabled.

114
00:07:51,000 --> 00:07:58,000
So the very similar change I have to do inside the values.yaml of all the remaining microservices.

115
00:07:58,000 --> 00:08:00,000
So let me open the cards

116
00:08:00,000 --> 00:08:02,000
microservice values.yaml.

117
00:08:02,000 --> 00:08:05,000
And here also I'm going to change this variable name.

118
00:08:05,000 --> 00:08:10,000
Let me do the same for config server inside config server values.yaml

119
00:08:10,000 --> 00:08:11,000
also I'm trying to change.

120
00:08:11,000 --> 00:08:16,000
So similarly I'm going to change for the remaining microservices as well.

121
00:08:16,000 --> 00:08:18,000
Let me change this time for Gateway server.

122
00:08:18,000 --> 00:08:20,000
So here we have Eureka enabled.

123
00:08:20,000 --> 00:08:22,000
I have changed that to discovery enabled.

124
00:08:22,000 --> 00:08:31,000
As a next step, I'll go to loans microservice values.yaml and look for Eureka enabled and change that

125
00:08:31,000 --> 00:08:34,000
let me do the same for message microservice.

126
00:08:34,000 --> 00:08:37,000
So in this file also I'm going to change the variable name.

127
00:08:37,000 --> 00:08:43,000
So as a next step we can go to the environment folders inside the environments folder

128
00:08:43,000 --> 00:08:46,000
first, I'll open the values.yaml.

129
00:08:46,000 --> 00:08:53,000
So inside these values.yaml only we are trying to define a variable name which is Eureka server URL.

130
00:08:53,000 --> 00:08:58,000
We need to replace this Eureka server URL with discovery server URL.

131
00:08:58,000 --> 00:09:04,000
So let me update this with Discovery once we corrected the variable name, we should also correct the

132
00:09:04,000 --> 00:09:05,000
URL details.

133
00:09:05,000 --> 00:09:12,000
So the URL of Discovery server is going to be spring cloud kubernetes discovery server and the port

134
00:09:12,000 --> 00:09:13,000
is 80.

135
00:09:13,000 --> 00:09:15,000
So how do I know this service name?

136
00:09:15,000 --> 00:09:21,000
If you go and check the Kubernetes manifest file that we have used to deploy the Discovery server here

137
00:09:21,000 --> 00:09:27,000
inside this file, under the service type, we have mentioned the name as spring-cloud-kubernetes-discoveryserver

138
00:09:27,000 --> 00:09:28,000
.

139
00:09:28,000 --> 00:09:32,000
So the same name we have to give inside the values.yaml.

140
00:09:32,000 --> 00:09:36,000
So I need to make the similar change inside other environments as well.

141
00:09:36,000 --> 00:09:43,000
So let me copy this and go for the prod env and open the values.yaml and I'm going to replace this Eureka

142
00:09:43,000 --> 00:09:46,000
server URL with the discovery server URL.

143
00:09:46,000 --> 00:09:51,000
Now as a next step, let me do the same change for qa env as well.

144
00:09:51,000 --> 00:09:58,000
So here we need to open the values.yaml and replace this eurekaServerURL with the discoveryServerURL

145
00:09:58,000 --> 00:09:58,000
.

146
00:09:58,000 --> 00:10:00,000
So now we have made all the

147
00:10:00,000 --> 00:10:01,000
required changes.

148
00:10:01,000 --> 00:10:03,000
Let me recompile all the helm charts.

149
00:10:03,000 --> 00:10:07,000
So for the same first I'll go back to the helm folder here

150
00:10:07,000 --> 00:10:14,000
first, I'll go inside the easybank-services folder and navigate into the accounts helm chart.

151
00:10:14,000 --> 00:10:19,000
Now I'm going to run the helm dependencies build so the dependencies are recompiled.

152
00:10:19,000 --> 00:10:22,000
So let me do the same for other helm charts as well

153
00:10:22,000 --> 00:10:23,000
very quickly

154
00:10:23,000 --> 00:10:24,000
behind the scenes.

155
00:10:24,000 --> 00:10:30,000
Behind the scenes I have recompiled all the helm charts, including the environment helm charts like

156
00:10:30,000 --> 00:10:33,000
dev env prod env and QA env.

157
00:10:33,000 --> 00:10:39,000
So before I try to install all my microservices into the Kubernetes cluster, let me make sure if my

158
00:10:39,000 --> 00:10:44,000
helm charts are properly compiled or not by using the helm template command.

159
00:10:44,000 --> 00:10:49,000
So I'll try to run the helm template command from the prod env folder.

160
00:10:49,000 --> 00:10:51,000
So I'm getting a successful response.

161
00:10:51,000 --> 00:10:53,000
That means there are no compilation issues.

162
00:10:53,000 --> 00:10:59,000
We can also quickly validate for one of the microservice like loans for these

163
00:10:59,000 --> 00:11:04,000
you can see we are injecting a environment variable related to the discovery server URL.

164
00:11:04,000 --> 00:11:08,000
So this confirms all our changes are recompiled properly.

165
00:11:08,000 --> 00:11:15,000
As a next step, I will navigate back to the parent folder and here I'm going to run the helm install

166
00:11:15,000 --> 00:11:21,000
command by providing a release name as easybank followed by prod env, which is my helm chart.

167
00:11:21,000 --> 00:11:23,000
So let me execute this.

168
00:11:23,000 --> 00:11:27,000
So this is going to start my installation of my microservices.

169
00:11:27,000 --> 00:11:33,000
By the time I come to the next lecture, all my microservices are going to get started successfully.

170
00:11:33,000 --> 00:11:36,000
I hope you are clear with all the changes that we have done in this lecture.

171
00:11:36,000 --> 00:11:39,000
Thank you and I'll catch you in the next lecture bye.

