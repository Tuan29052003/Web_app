1
00:00:00,000 --> 00:00:06,000
Now, inside this lecture, let's try to implement Profile's concept inside our accounts Microservice.

2
00:00:06,000 --> 00:00:12,000
Please do follow all the instructions that we are following because I'm going to give you an assignment

3
00:00:12,000 --> 00:00:16,000
to make similar changes inside loans and cards microservice.

4
00:00:16,000 --> 00:00:22,000
So here, just like how we have application.yml file, I'm going to create two more different files

5
00:00:22,000 --> 00:00:24,000
under the resources folder.

6
00:00:24,000 --> 00:00:29,000
So let me right click on these resource folder and click on this new file.

7
00:00:29,000 --> 00:00:35,000
And the very first file name that I'm going to create is application_qa.yml.

8
00:00:35,000 --> 00:00:41,000
Since we want to follow the Yml configurations, we need to make sure the extension is .yml.

9
00:00:42,000 --> 00:00:44,000
So I'm trying to create this file.

10
00:00:44,000 --> 00:00:50,000
Similarly, I'm going to create one more file and this time the file name is going to be application_prod.yml.

11
00:00:50,000 --> 00:00:52,000
.

12
00:00:52,000 --> 00:00:59,000
So total there are three application.yml files inside my application. application.yml belongs

13
00:00:59,000 --> 00:01:05,000
to default profile and this one belongs to prod profile and the last one belongs to the QA profile or

14
00:01:05,000 --> 00:01:06,000
testing profile.

15
00:01:06,000 --> 00:01:13,000
So now inside the application.yml file we have many properties, we have port related configurations,

16
00:01:13,000 --> 00:01:17,000
we have build version, we have these accounts related configurations.

17
00:01:17,000 --> 00:01:23,000
First you need to identify which properties are going to change from environment to environment inside

18
00:01:23,000 --> 00:01:24,000
your microservice.

19
00:01:24,000 --> 00:01:29,000
So if you see the server.port is going to be the same for all environments.

20
00:01:29,000 --> 00:01:34,000
We don't want to start our applications in different port numbers in different environments.

21
00:01:34,000 --> 00:01:37,000
That's why we don't need to move this property into the other profiles.

22
00:01:37,000 --> 00:01:42,000
We can have this as a default value which will always be loaded by the spring boot framework.

23
00:01:42,000 --> 00:01:48,000
And very similarly, since we are using h2 database, it is going to be the same for all environments.

24
00:01:48,000 --> 00:01:52,000
We can simply ignore all this H2 database related configurations.

25
00:01:52,000 --> 00:01:59,000
So with these I only have an requirement that these properties like build version and accounts related

26
00:01:59,000 --> 00:02:04,000
properties only will change from environment to environment inside my microservices.

27
00:02:04,000 --> 00:02:10,000
So what should I do is, I should create a similar set of properties inside my other profiles.

28
00:02:10,000 --> 00:02:16,000
But we need to make sure that these properties have different values in different profiles because that's

29
00:02:16,000 --> 00:02:17,000
our intention.

30
00:02:17,000 --> 00:02:21,000
Otherwise there is no need of creating different profiles.

31
00:02:21,000 --> 00:02:26,000
So before I try to copy these properties into different profiles, let me change this build version

32
00:02:26,000 --> 00:02:31,000
to 3.0 inside the default profile, which means inside my local development,

33
00:02:31,000 --> 00:02:35,000
the version right now we have deployed is 3.0.

34
00:02:35,000 --> 00:02:40,000
Similarly, inside QA I'll make it as 2.0 and inside the production it will be 1.0.

35
00:02:40,000 --> 00:02:44,000
This way we are mentioning different value inside, different, different profiles.

36
00:02:44,000 --> 00:02:48,000
So now I'll go to the qa.yml file.

37
00:02:48,000 --> 00:02:50,000
Here I'm going to paste few properties.

38
00:02:50,000 --> 00:02:57,000
You can see all of them has the same property names, only the values are changed inside the build version

39
00:02:57,000 --> 00:03:01,000
we have 2.0 here, whereas inside the default profile it is 3.0.

40
00:03:01,000 --> 00:03:03,000
Very similarly, the message is also changed.

41
00:03:03,000 --> 00:03:10,000
You can see welcome to easy bank accounts related to QA  APIs and the contact details also will be different.

42
00:03:10,000 --> 00:03:12,000
Whenever there is an issue inside the QA environment.

43
00:03:12,000 --> 00:03:18,000
My clients should reach out to the QA lead and this is the name of the QA lead and this is the email

44
00:03:18,000 --> 00:03:22,000
of the QA lead and the phone numbers that we mentioned under the on call support

45
00:03:22,000 --> 00:03:26,000
also different compared to what we have inside the default values.

46
00:03:26,000 --> 00:03:30,000
You can get these properties along with the values from the GitHub repo.

47
00:03:30,000 --> 00:03:35,000
So now we mentioned the properties inside this qa.yml file.

48
00:03:35,000 --> 00:03:42,000
We should also tell to the spring boot framework when these profile are when these file has to be activated.

49
00:03:42,000 --> 00:03:47,000
For the same, we need to define one more property inside this yaml file and the property starts with

50
00:03:47,000 --> 00:03:49,000
spring, post the spring

51
00:03:49,000 --> 00:03:55,000
we need to come to the next line and here we need to mention config followed by colon and come to the

52
00:03:55,000 --> 00:03:56,000
next line.

53
00:03:56,000 --> 00:04:01,000
After this we need to mention activate followed by colon and come to the next line.

54
00:04:01,000 --> 00:04:08,000
And at last we need to mention on-profile:and what is the profile value.

55
00:04:08,000 --> 00:04:14,000
So the profile value should be  QA here because our file also have a profile name as QA.

56
00:04:14,000 --> 00:04:21,000
So whenever I'm trying to activate a profile with the name QA, this file has to be activated and all

57
00:04:21,000 --> 00:04:25,000
the properties defined inside these file should be considered by my spring boot application.

58
00:04:25,000 --> 00:04:29,000
So that's what we are trying to convey with these configuration.

59
00:04:29,000 --> 00:04:34,000
Now I can try to create similar set of properties inside application_prod.yml.

60
00:04:35,000 --> 00:04:39,000
So here I'm trying to paste the values from the GitHub repo just to save some time.

61
00:04:39,000 --> 00:04:43,000
Like you can see, I have created properties here with the same property names.

62
00:04:43,000 --> 00:04:50,000
The build version is going to be 1.0 and the message is going to have prod APIs and the contact details

63
00:04:50,000 --> 00:04:53,000
for the production environment is going to be the product owner.

64
00:04:53,000 --> 00:04:58,000
So this is the name and this is the email and these are the on call support mobile number details.

65
00:04:58,000 --> 00:04:59,000
And we should also make sure.

66
00:04:59,000 --> 00:05:05,000
We are mentioning this property that these profile are that these Yaml file should be activated whenever

67
00:05:05,000 --> 00:05:08,000
we are trying to activate a profile with the value prod.

68
00:05:08,000 --> 00:05:13,000
So once we make these changes we should be good from these two Yaml files perspective.

69
00:05:13,000 --> 00:05:19,000
Now as a next change, we should tell to the spring boot framework that we have created two different

70
00:05:19,000 --> 00:05:22,000
profiles and these are the names of the Yaml files.

71
00:05:22,000 --> 00:05:22,000
For the same,

72
00:05:22,000 --> 00:05:28,000
we need to define a property inside these application Yaml and the properties should start with spring.

73
00:05:28,000 --> 00:05:31,000
Since we already have spring here, we should be good.

74
00:05:31,000 --> 00:05:35,000
We can directly mention what is our next value after spring.

75
00:05:35,000 --> 00:05:41,000
The property name is spring.config, so spring is already there in the top and we should make sure

76
00:05:41,000 --> 00:05:44,000
that this config is started inside the spring.

77
00:05:44,000 --> 00:05:48,000
So you can see under spring we have created one more child element which is config.

78
00:05:48,000 --> 00:05:56,000
Now inside this config I need to mention import and at this import I need to mention the list of Yaml

79
00:05:56,000 --> 00:06:01,000
files that we have created since we are trying to mention a list of elements inside yaml.

80
00:06:01,000 --> 00:06:03,000
They should always start with hyphen.

81
00:06:03,000 --> 00:06:04,000
After this hyphen,

82
00:06:04,000 --> 00:06:06,000
please give the space followed by,

83
00:06:06,000 --> 00:06:08,000
what is your file name?

84
00:06:08,000 --> 00:06:13,000
The file name is going to be application.yml.

85
00:06:14,000 --> 00:06:20,000
Very similarly, we need to mention one more element and here the file name should be application_prod.

86
00:06:20,000 --> 00:06:20,000
.

87
00:06:21,000 --> 00:06:28,000
Now we have created all the required profiles and mention the same inside the application.yml also

88
00:06:28,000 --> 00:06:30,000
to import them. As a next step,

89
00:06:30,000 --> 00:06:32,000
we should activate at least one profile.

90
00:06:32,000 --> 00:06:37,000
If you are not activating any profile, a default profile will be activated.

91
00:06:37,000 --> 00:06:43,000
First, let's try to test with these changes our microservice and see which profile is going to get

92
00:06:43,000 --> 00:06:43,000
activated.

93
00:06:43,000 --> 00:06:45,000
So let me save this changes.

94
00:06:45,000 --> 00:06:46,000
Do a build.

95
00:06:46,000 --> 00:06:48,000
I'm going to restart my application.

96
00:06:48,000 --> 00:06:52,000
Once I restart is completed, I'll go to the postman here

97
00:06:52,000 --> 00:06:54,000
first I'll try to invoke this contact info.

98
00:06:54,000 --> 00:06:59,000
Like you can see here we are getting the values from the default profile.

99
00:06:59,000 --> 00:07:04,000
That's why you are able to see this local API's, the developer name and the mobile numbers mentioned

100
00:07:04,000 --> 00:07:06,000
inside the default profile.

101
00:07:06,000 --> 00:07:12,000
Similarly, if you try to invoke the build info here, also under the build info you will get 3.0 which

102
00:07:12,000 --> 00:07:16,000
is coming from the default profile. For Java version,

103
00:07:16,000 --> 00:07:21,000
you will always see the same output because you are always running the microservice inside the same

104
00:07:21,000 --> 00:07:22,000
local system.

105
00:07:22,000 --> 00:07:25,000
So that's why don't worry about this Java version.

106
00:07:25,000 --> 00:07:28,000
You can always test build info and contact info.

107
00:07:28,000 --> 00:07:33,000
Now I want to activate a  uat profile or I want to activate a production profile.

108
00:07:33,000 --> 00:07:35,000
Let's see how to activate the same.

109
00:07:35,000 --> 00:07:35,000
For the same,

110
00:07:35,000 --> 00:07:40,000
we need to go to the application.yml here just under the spring.

111
00:07:40,000 --> 00:07:44,000
We need to make sure we are mentioning a element with the name profiles.

112
00:07:44,000 --> 00:07:51,000
So spring.profiles and this profiles we need to mention an element which is active and under this

113
00:07:52,000 --> 00:07:55,000
active element we can pass list of profiles information.

114
00:07:55,000 --> 00:08:03,000
Suppose here, if I have a requirement only to activate the QA profile, I need to pass the value which

115
00:08:03,000 --> 00:08:07,000
is QA. So please make sure you are following the same naming convention.

116
00:08:07,000 --> 00:08:11,000
So this is the same thing I have mentioned inside the application_qa.yml.

117
00:08:11,000 --> 00:08:13,000
.

118
00:08:13,000 --> 00:08:18,000
So whatever you have mentioned here, the same value you have to mention while you are trying to activate

119
00:08:18,000 --> 00:08:19,000
the profile.

120
00:08:19,000 --> 00:08:24,000
So based upon this value, only spring boot is going to activate all the properties present inside the

121
00:08:24,000 --> 00:08:25,000
application_qa.yml.

122
00:08:25,000 --> 00:08:27,000
.

123
00:08:27,000 --> 00:08:33,000
So now we know that by default the default profile will be activated and now we are trying to activate

124
00:08:33,000 --> 00:08:40,000
one more profile which is QA. So here Spring boot will see same set of properties with the same property

125
00:08:40,000 --> 00:08:40,000
key names.

126
00:08:40,000 --> 00:08:46,000
What it is going to do is, it is going to override the default values present inside this Yaml file with

127
00:08:46,000 --> 00:08:51,000
the values defined inside the application_qa.yml.

128
00:08:51,000 --> 00:08:53,000
So let's try to see this behavior.

129
00:08:53,000 --> 00:08:56,000
I'm saving all the changes and I'm doing a build now.

130
00:08:56,000 --> 00:08:57,000
I'll go to the postman.

131
00:08:57,000 --> 00:08:59,000
First I'll try to invoke this build info.

132
00:08:59,000 --> 00:09:03,000
We should get 2.0. So you can see I'm getting 2.0 as the output.

133
00:09:03,000 --> 00:09:09,000
Now if I go to the contact info and try to click on the send button, we are getting message from the QA

134
00:09:10,000 --> 00:09:16,000
environment and the contact detail has a QA lead information and the on call support has a mobile numbers

135
00:09:16,000 --> 00:09:19,000
that we have mentioned. Inside the QA profile.

136
00:09:19,000 --> 00:09:21,000
This way we can activate a specific profile.

137
00:09:21,000 --> 00:09:23,000
Now here you may have a question.

138
00:09:23,000 --> 00:09:29,000
Suppose if I want to change this value to production or suppose if I want to activate a production profile

139
00:09:29,000 --> 00:09:35,000
inside a production environment, I need to change this value and I need to regenerate my Docker image.

140
00:09:35,000 --> 00:09:39,000
With that, we are not making our code base as immutable.

141
00:09:39,000 --> 00:09:45,000
That's why let's try to explore what are the various options that we have to change the property values

142
00:09:45,000 --> 00:09:49,000
dynamically during the startup through an external parameter.

143
00:09:49,000 --> 00:09:54,000
I'm assuming as of now you are clear how to create multiple profiles and how to activate a particular

144
00:09:54,000 --> 00:09:55,000
profile.

145
00:09:55,000 --> 00:09:59,000
Inside the next lecture I'll be showing you what are the various options that we have to activate

146
00:09:59,000 --> 00:10:02,000
a profile using external parameter.

147
00:10:02,000 --> 00:10:05,000
Thank you and I'll catch you in the next lecture bye.

