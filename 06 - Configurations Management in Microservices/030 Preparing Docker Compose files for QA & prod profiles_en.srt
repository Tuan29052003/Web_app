1
00:00:00,000 --> 00:00:07,000
As of now, we have this Docker compose file created for the default profile under the default folder.

2
00:00:07,000 --> 00:00:14,000
We want to create very similar kind of Docker compose file for prod and qa profile. So that based upon your

3
00:00:14,000 --> 00:00:20,000
requirements you can always try to run the corresponding docker compose Yaml file before I try to create

4
00:00:20,000 --> 00:00:22,000
the new Docker compose files.

5
00:00:22,000 --> 00:00:24,000
First, let me stop all the running containers.

6
00:00:24,000 --> 00:00:30,000
So here inside the terminal where I have started the Docker compose up command, I'm trying to clear

7
00:00:30,000 --> 00:00:35,000
the console post that I will try to run the command docker compose down this will stop and delete

8
00:00:35,000 --> 00:00:38,000
all the containers inside my system.

9
00:00:38,000 --> 00:00:40,000
Now I'll go to my IDE.

10
00:00:40,000 --> 00:00:46,000
Here creating Docker compose for the new profiles is very, very easy, so let me show you how easy it is.

11
00:00:46,000 --> 00:00:52,000
I'm going to select these two files from the default and paste the same under the prod.

12
00:00:52,000 --> 00:00:58,000
After this prod, I'm going to paste the same inside the QA as well, so let me paste them.

13
00:00:58,000 --> 00:01:02,000
You can see now we have the same files inside the QA and prod.

14
00:01:02,000 --> 00:01:07,000
Do you know how many changes I have to do inside these docker compose files that I have created under

15
00:01:07,000 --> 00:01:07,000
prod

16
00:01:07,000 --> 00:01:14,000
and qa. There is only one change that we have to do which is under the commonconfig.yml instead of

17
00:01:14,000 --> 00:01:16,000
this default.

18
00:01:16,000 --> 00:01:23,000
I need to mention prod here and similarly I need to open the commonconfig.yml and change this spring

19
00:01:23,000 --> 00:01:27,000
profiles active as QA. This way with only one environment variable.

20
00:01:27,000 --> 00:01:31,000
We are trying to control the behavior of our containers.

21
00:01:31,000 --> 00:01:37,000
Externally, we are using the same docker image to run the containers in qa environment, prod environment

22
00:01:37,000 --> 00:01:38,000
and local environment.

23
00:01:38,000 --> 00:01:42,000
So this is the power of Docker images and Docker containers.

24
00:01:42,000 --> 00:01:49,000
Along with the spring boot framework, we are able to use the same immutable Docker image across all

25
00:01:49,000 --> 00:01:49,000
the environments.

26
00:01:49,000 --> 00:01:55,000
And if you have any specific requirements based upon your environment for suppose like inside the prod

27
00:01:55,000 --> 00:02:00,000
environment, if you want to give more space for your containers, you can mention that with the help

28
00:02:00,000 --> 00:02:03,000
of commonconfig.yml instead of 700 mb,

29
00:02:03,000 --> 00:02:04,000
you can give more memory.

30
00:02:04,000 --> 00:02:10,000
This way we have the freedom also to maintain different, different requirements and configurations for various

31
00:02:10,000 --> 00:02:11,000
environments.

32
00:02:11,000 --> 00:02:17,000
Now we have two different Yaml files available for prod and qa profile as well.

33
00:02:17,000 --> 00:02:20,000
Let's try to test one of them and make sure everything is working.

34
00:02:20,000 --> 00:02:22,000
So which one you want me to test here?

35
00:02:22,000 --> 00:02:26,000
So tell me whether you want to go with prod or qa, you want to go with prod.

36
00:02:26,000 --> 00:02:32,000
I know you like always production, so let me go with the prod. For the same inside my terminal,

37
00:02:32,000 --> 00:02:35,000
I need to navigate to the folder which is prod.

38
00:02:35,000 --> 00:02:38,000
And inside this prod I need to run the command which is docker.

39
00:02:38,000 --> 00:02:39,000
compose up.

40
00:02:39,000 --> 00:02:41,000
So let me run this command.

41
00:02:41,000 --> 00:02:46,000
This will start all my containers and my webhook is running inside the other terminal.

42
00:02:46,000 --> 00:02:51,000
I didn't disturb anything here, so let's wait for our containers to get started.

43
00:02:51,000 --> 00:02:54,000
Now all my five containers are started.

44
00:02:54,000 --> 00:03:00,000
I can also confirm the same inside the Docker desktop by opening this prod profile and clicking on this

45
00:03:00,000 --> 00:03:04,000
rabbitmq you can see the Rabbitmq started successfully.

46
00:03:04,000 --> 00:03:06,000
Now let me check the config server.

47
00:03:06,000 --> 00:03:08,000
Config server also started successfully.

48
00:03:08,000 --> 00:03:11,000
Now I can open the loans microservice.

49
00:03:11,000 --> 00:03:15,000
It also started successfully the same I can confirm for cards.

50
00:03:15,000 --> 00:03:16,000
This also started successfully.

51
00:03:16,000 --> 00:03:21,000
Now I'll check for accounts microservice and this one also started successfully.

52
00:03:21,000 --> 00:03:23,000
Now let's try to test the changes.

53
00:03:23,000 --> 00:03:29,000
This time I'll try to change the property related to the cards microservice and see if it is going to

54
00:03:29,000 --> 00:03:30,000
work.Ffor the same,

55
00:03:30,000 --> 00:03:37,000
I'm going to my eazybytes-config and here I need to change the values inside the cards-prod.yml.

56
00:03:37,000 --> 00:03:42,000
Because right now we started the microservice containers with the prod profile.

57
00:03:42,000 --> 00:03:45,000
So let me click on this and post that,

58
00:03:45,000 --> 00:03:51,000
I can click on this edit button. Here instead of prod, I'm going to mention that Docker APIs.

59
00:03:51,000 --> 00:03:55,000
Now let me commit these changes to the GitHub repo.

60
00:03:55,000 --> 00:03:58,000
Once I have committed these changes, I'll go directly to my postman.

61
00:03:58,000 --> 00:04:04,000
Inside my postman, I need to invoke the cards microservice contact-info API.

62
00:04:04,000 --> 00:04:06,000
So I'm trying to invoke this.

63
00:04:06,000 --> 00:04:12,000
You can see we are getting Docker APIs as an output, so let me try to revert the changes and test one

64
00:04:12,000 --> 00:04:16,000
more time so that we'll go back to the original message value.

65
00:04:16,000 --> 00:04:21,000
Here I'm clicking on this edit button and replacing this docker with the prod and committing the changes

66
00:04:21,000 --> 00:04:23,000
to the GitHub repo.

67
00:04:23,000 --> 00:04:25,000
I'll go to my postman, this time 

68
00:04:25,000 --> 00:04:27,000
I'm trying to click on the send button again.

69
00:04:27,000 --> 00:04:32,000
You can see I'm getting the prod APIs, so there might be a delay in refreshing like wait for five to

70
00:04:32,000 --> 00:04:39,000
10s. Post that you should be able to see the updated property inside your postman response.

71
00:04:39,000 --> 00:04:45,000
With this we have successfully tested all the configuration management related changes both locally

72
00:04:45,000 --> 00:04:50,000
and using the Docker compose, so I'm going to check in all the changes present inside this folder into

73
00:04:50,000 --> 00:04:51,000
the GitHub repo.

74
00:04:51,000 --> 00:04:55,000
Please refer the same for any questions or for any issues.

75
00:04:55,000 --> 00:04:58,000
We discussed a lot about configuration management.

76
00:04:58,000 --> 00:04:59,000
You deserve a break and

77
00:04:59,000 --> 00:05:01,000
I'm also deserve a break.

78
00:05:01,000 --> 00:05:05,000
So let's take a break and we'll connect back inside the next section.

79
00:05:05,000 --> 00:05:11,000
So don't try to complete the entire course in a single sitting that will be overhead for you to absorb

80
00:05:11,000 --> 00:05:12,000
all the knowledge.

81
00:05:12,000 --> 00:05:18,000
So try to complete daily one section or weekly one section, whatever comfortable for you instead

82
00:05:18,000 --> 00:05:21,000
of trying to complete everything in a single sitting.

83
00:05:21,000 --> 00:05:25,000
And before you try to close this lecture, I have a request for you.

84
00:05:25,000 --> 00:05:27,000
Please provide your review to this course.

85
00:05:27,000 --> 00:05:32,000
Your feedback is very important for me to understand what you like, what you don't like.

86
00:05:32,000 --> 00:05:37,000
If you want to appreciate about this course or if you want to share the feedback personally with me,

87
00:05:37,000 --> 00:05:40,000
please send a message to me on LinkedIn.

88
00:05:40,000 --> 00:05:43,000
Or you can also send a message inside the Udemy as well.

89
00:05:43,000 --> 00:05:46,000
If you visit my website, which is eazybytes.com.

90
00:05:46,000 --> 00:05:48,000
Here there is a LinkedIn link.

91
00:05:48,000 --> 00:05:54,000
You can click on that link and try to follow the easy bites for regular updates and if needed, you

92
00:05:54,000 --> 00:06:00,000
can also connect with me or an email by sending an email to this email here like tutor@eazybytes.com.

93
00:06:00,000 --> 00:06:01,000
.

94
00:06:01,000 --> 00:06:05,000
With that, let's take a break and I'll catch you in the next section

95
00:06:05,000 --> 00:06:05,000
bye.

