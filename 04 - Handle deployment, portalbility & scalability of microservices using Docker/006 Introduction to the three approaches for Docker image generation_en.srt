1
00:00:00,000 --> 00:00:04,000
Are you ready to generate Docker image from our microservice?

2
00:00:04,000 --> 00:00:10,000
I know you are super excited and you are super ready. By converting our microservice into Docker images.

3
00:00:10,000 --> 00:00:15,000
We are going to make them very lightweight, which will make them suitable to overcome the challenges

4
00:00:15,000 --> 00:00:19,000
related to the deployment portability and scalability.

5
00:00:19,000 --> 00:00:25,000
In order to generate a Docker image from a web application or a spring boot application, there are

6
00:00:25,000 --> 00:00:29,000
three mostly common used approaches inside the industry.

7
00:00:29,000 --> 00:00:34,000
Inside this section, I'm going to discuss all these three common approach, and by the end of this

8
00:00:34,000 --> 00:00:40,000
section we are going to choose one of this approach and we can continue with that option for the remaining

9
00:00:40,000 --> 00:00:40,000
course.

10
00:00:40,000 --> 00:00:44,000
Let me try to give a quick introduction about these three approaches.

11
00:00:44,000 --> 00:00:47,000
The very first approach is by following the Docker file.

12
00:00:47,000 --> 00:00:52,000
This is the most basic and the most traditional approach to generate a Docker image.

13
00:00:52,000 --> 00:00:58,000
Inside this approach, we need to write a set of instructions inside a Docker file and based upon these

14
00:00:58,000 --> 00:01:02,000
instructions, my Docker server is going to generate a Docker image.

15
00:01:02,000 --> 00:01:08,000
So this is the most basic approach, and this approach involves some learning curve of the Docker syntax

16
00:01:08,000 --> 00:01:10,000
and the Docker best practices.

17
00:01:10,000 --> 00:01:15,000
So I'll just give a quick introduction about this approach and using the same approach only we are going

18
00:01:15,000 --> 00:01:18,000
to generate a Docker image of Accounts Microservice.

19
00:01:18,000 --> 00:01:23,000
The second approach that we have is Buildpacks. With the help of Buildpacks,

20
00:01:23,000 --> 00:01:28,000
we don't have to write any Docker file and we don't have to provide any instructions manually to the

21
00:01:28,000 --> 00:01:30,000
Docker server to generate a Docker image.

22
00:01:30,000 --> 00:01:35,000
Instead, with the help of a single Maven command, we can generate a Docker image and behind the scenes

23
00:01:35,000 --> 00:01:40,000
this maven is going to use the concept of Buildpacks.

24
00:01:40,000 --> 00:01:47,000
So Buildpacks is a project initiated and developed by Heroku and Pivotal based upon the best practices

25
00:01:47,000 --> 00:01:49,000
that they have learned over the years.

26
00:01:49,000 --> 00:01:53,000
So this Buildpack simplifies the containerization of our web applications.

27
00:01:53,000 --> 00:02:00,000
How it is going to simplify is we don't have to write any low level Docker file like in the first approach

28
00:02:00,000 --> 00:02:05,000
and using these approach only we are going to generate a Docker image of Loans Microservice.

29
00:02:05,000 --> 00:02:11,000
Now the last approach that we have is Google Jib. Google Jib is a product developed by the Google

30
00:02:11,000 --> 00:02:11,000
itself.

31
00:02:11,000 --> 00:02:17,000
Later on they open source this Java tool using this Java tool, and with the Maven plugin command,

32
00:02:17,000 --> 00:02:24,000
we can generate a Docker image of any Java application very easily without writing any low level dockerfile

33
00:02:24,000 --> 00:02:25,000
like in the first approach.

34
00:02:25,000 --> 00:02:29,000
So all these approaches, they have their advantages and disadvantages.

35
00:02:29,000 --> 00:02:33,000
I'm going to discuss in detail while we are discussing each of these approach.

36
00:02:33,000 --> 00:02:39,000
So using this Google jib approach only, we are going to generate a Docker image of Cards Microservice.

37
00:02:39,000 --> 00:02:39,000
Here,

38
00:02:39,000 --> 00:02:44,000
you may ask me a question like since there are three different approaches, is that the reason why I'm

39
00:02:44,000 --> 00:02:48,000
building three different microservices like Accounts, Loans and Cards?

40
00:02:48,000 --> 00:02:48,000
Off course not.

41
00:02:48,000 --> 00:02:50,000
That's simply a coincidence.

42
00:02:50,000 --> 00:02:56,000
I have developed three different microservices inside a BankApplication and luckily there are three

43
00:02:56,000 --> 00:03:01,000
different commonly used approaches to generate Docker image from a Spring boot web application.

44
00:03:01,000 --> 00:03:08,000
So that's why, like you can see, I have given a mapping of each approach to a microservice.

45
00:03:08,000 --> 00:03:13,000
But by the end of this section, like I said, we are going to select one of these approach and we are

46
00:03:13,000 --> 00:03:16,000
going to follow the same throughout this course.

47
00:03:16,000 --> 00:03:19,000
I hope you are excited about these three different approaches.

48
00:03:19,000 --> 00:03:22,000
Thank you and I'll catch you in the next lecture bye.

